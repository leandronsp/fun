(ns clojure-euler.002_even_fibo_numbers)

(comment
  "Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed
  four million, find the sum of the even-valued terms.")

(defn sum-fibo
  [previous current sum acc ceil]
    (if-not (< current ceil)
      sum
      (let [sum (+ sum acc)]
      (let [acc (+ (* 4 current) previous)]
      (recur current acc sum acc ceil)))))

(defn sum-under
  [ceil]
  (cond
    (< ceil 2) 0
    (< ceil 10) 2
    :else (sum-fibo 2 8 10 0 ceil)))
