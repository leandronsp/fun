(update {} :a 1)
(update-in {} :a 1)
(update {} :a 1)
quit
(defn update-map [word acc] (update acc word inc))
(update-map {} :a 1)
(update-map :a {})
(update-map :a {:a 1})
(defn update-map [word acc] (update acc word (fnil inc 0) nil))
(update-map :a {:a 1})
(defn update-map [word acc] (update acc word ((fnil inc 0) nil)
(update-map :a {:a 1})
)
(defn update-map [word acc] (update acc word ((fnil inc 0) nil)))
(update-map :a {:a 1})
(update-map :a {})
(defn update-map [word acc] (update acc word (fnil inc 0)))
(update-map :a {})
(update-map :a {:a 1})
quit
(re-matches #"hello" "HELLO")
(re-matches #"HELLO" "HELLO")
(re-matches #"\w+-?\w*" "HELLO")
(re-matches #"\w+-?\w*" "HELLO:")
(re-find (re-pattern "\w+-?\w*") "HELLO:")
(re-find (re-pattern "\w+-?\w*") "HELLO")
(re-find #"\w+-?\w*" "HELLO")
(re-find #"\w+-?\w*" "HELLO:")
(re-find #"\w+-?\w*" "12")
(re-find #"\w+-?\w*" ":*()")
quit
(re-find #"\w+-?\w*" "HELLO:")
quit
